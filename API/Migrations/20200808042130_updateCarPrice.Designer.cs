// <auto-generated />
using System;
using API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20200808042130_updateCarPrice")]
    partial class updateCarPrice
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Models.Account", b =>
                {
                    b.Property<int>("id_account")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("access_level");

                    b.Property<string>("email");

                    b.Property<string>("name");

                    b.Property<string>("password");

                    b.Property<string>("username");

                    b.HasKey("id_account");

                    b.ToTable("Tbl_Account");
                });

            modelBuilder.Entity("API.Models.Car", b =>
                {
                    b.Property<int>("id_car")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("accountid_account");

                    b.Property<int?>("merkid_merk");

                    b.Property<string>("nm_car");

                    b.Property<int>("price");

                    b.Property<string>("transmition");

                    b.Property<int>("year");

                    b.HasKey("id_car");

                    b.HasIndex("accountid_account");

                    b.HasIndex("merkid_merk");

                    b.ToTable("Tbl_Car");
                });

            modelBuilder.Entity("API.Models.Konsumen", b =>
                {
                    b.Property<int>("id_konsumen")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("alamat");

                    b.Property<string>("nama");

                    b.Property<string>("tlp");

                    b.HasKey("id_konsumen");

                    b.ToTable("Tbl_Konsumen");
                });

            modelBuilder.Entity("API.Models.Merk", b =>
                {
                    b.Property<int>("id_merk")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("merk");

                    b.HasKey("id_merk");

                    b.ToTable("Tbl_Merk");
                });

            modelBuilder.Entity("API.Models.Reserve", b =>
                {
                    b.Property<int>("id_reserve")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("accountid_account");

                    b.Property<int?>("carid_car");

                    b.Property<DateTime>("end_date");

                    b.Property<int?>("konsumenid_konsumen");

                    b.Property<DateTime>("start_date");

                    b.Property<string>("status");

                    b.Property<DateTime>("tgl_bayar");

                    b.Property<int>("total");

                    b.HasKey("id_reserve");

                    b.HasIndex("accountid_account");

                    b.HasIndex("carid_car");

                    b.HasIndex("konsumenid_konsumen");

                    b.ToTable("Tbl_Reserve");
                });

            modelBuilder.Entity("API.Models.Car", b =>
                {
                    b.HasOne("API.Models.Account", "account")
                        .WithMany()
                        .HasForeignKey("accountid_account");

                    b.HasOne("API.Models.Merk", "merk")
                        .WithMany()
                        .HasForeignKey("merkid_merk");
                });

            modelBuilder.Entity("API.Models.Reserve", b =>
                {
                    b.HasOne("API.Models.Account", "account")
                        .WithMany()
                        .HasForeignKey("accountid_account");

                    b.HasOne("API.Models.Car", "car")
                        .WithMany()
                        .HasForeignKey("carid_car");

                    b.HasOne("API.Models.Konsumen", "konsumen")
                        .WithMany()
                        .HasForeignKey("konsumenid_konsumen");
                });
#pragma warning restore 612, 618
        }
    }
}
